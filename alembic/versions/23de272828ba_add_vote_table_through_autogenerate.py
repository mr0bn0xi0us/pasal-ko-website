"""Add vote table through autogenerate

Revision ID: 23de272828ba
Revises: d1ee28d6efd6
Create Date: 2024-06-22 22:57:57.379076

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23de272828ba'
down_revision: Union[str, None] = 'd1ee28d6efd6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('votes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'product_id')
    )
    op.add_column('products', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('products_users_fk', 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('products', 'owner_id')
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.alter_column('users', 'password',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'password',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('users', 'email')
    op.add_column('products', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key('products_users_fk', 'products', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_column('products', 'user_id')
    op.drop_table('votes')
    # ### end Alembic commands ###
